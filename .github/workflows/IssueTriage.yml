name: AI Issue Triage

on:
  issues:
    types: [opened, edited]

jobs:
  triage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Get Issue Content
        id: issue
        run: |
          echo "ISSUE_TITLE=$(jq -r .issue.title "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV
          echo "ISSUE_BODY=$(jq -r .issue.body "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV
          echo "ISSUE_NUMBER=$(jq -r .issue.number "$GITHUB_EVENT_PATH")" >> $GITHUB_ENV

      - name: Call OpenAI for Triage Suggestions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          
          PROMPT="Analyze the following GitHub issue and suggest:
          - a label (bug, feature, question)
          - priority (high, medium, low)
          - the most appropriate team to assign (e.g., frontend, backend, devops)
          - a short summary or first response
          ASSIGNED_TEAM=$(echo "$AI_RESPONSE" | grep -i "team to assign" | awk -F ':' '{print $2}' | xargs)
          if [[ "$ASSIGNED_TEAM" == "frontend" ]]; then
           ASSIGNEE="@org/frontend-team"
          elif [[ "$ASSIGNED_TEAM" == "backend" ]]; then
           ASSIGNEE="@org/backend-team"
          elif [[ "$ASSIGNED_TEAM" == "devops" ]]; then
           ASSIGNEE="@org/devops-team"
          else
           ASSIGNEE=""
          fi
          Title: $ISSUE_TITLE

          Body:
          $ISSUE_BODY"

          REQUEST=$(jq -n --arg prompt "$PROMPT" '{
           "model": "openai/gpt-4o",
           "messages": [{"role": "user", "content": $prompt}]
          }')

          RESPONSE=$(curl -s https://models.github.ai/inference/chat/completions \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$REQUEST")

          AI_RESPONSE=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')
          echo "AI_RESPONSE<<EOF" >> $GITHUB_ENV
          echo "$AI_RESPONSE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Assign Issue to Team
        if: env.ASSIGNEE != ''
        env:
         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
         gh issue edit "$ISSUE_NUMBER" --add-assignee "$ASSIGNEE"
      - name: Comment AI Suggestion on Issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$AI_RESPONSE" | gh issue comment "$ISSUE_NUMBER" --body-file -
